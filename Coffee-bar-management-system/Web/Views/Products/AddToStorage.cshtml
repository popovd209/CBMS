@using Entity.Models
@model Product

@{
    ViewData["Title"] = "Add to storage";
}

<h1 class="text-center mb-4">Add @Model.Name to Storage</h1>

<div class="row justify-content-center">
    <div class="col-md-6">
        <dl class="row">
            <dt class="col-sm-4 text-muted">Price</dt>
            <dd class="col-sm-8 text-coffee">@Html.DisplayFor(model => model.Price)</dd>

            <dt class="col-sm-4 text-muted">Category</dt>
            <dd class="col-sm-8 text-coffee">@Html.DisplayFor(model => model.Category)</dd>
        </dl>

        <section class="p-4 rounded shadow-sm" style="background-color: #FFF8E1;">
            <form asp-action="AddToStorage" method="post">
                <input type="hidden" asp-for="Id"/>
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="form-group mb-3">
                    <label asp-for="Quantity" class="form-label text-coffee">Quantity</label>
                    <input asp-for="Quantity" class="form-control" placeholder="Enter quantity" min="1"/>
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>

                <div class="text-end mt-3">
                    <div class="text-center" style="display:inline-block">
                        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                    </div>
                    <div class="text-center" style="display:inline-block">
                        <input type="submit" value="Add to Storage" class="btn btn-primary"/>
                    </div>
                </div>
            </form>
        </section>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}